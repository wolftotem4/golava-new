package bootstrap

import (
{{.packages}}
)

func InitApp(ctx context.Context) (*app.App, error) {
	locale := "en"

	debug := env.Bool(os.Getenv("APP_DEBUG"))

	appKey, err := appKey()
	if err != nil {
		return nil, err
	}

	router, err := routing.NewRouter("/")
	if err != nil {
		return nil, err
	}
	router.BaseURL, _ = url.Parse(os.Getenv("BASE_URL"))

	encrypter, err := initEncryption()
	if err != nil {
		return nil, err
	}

	{{.dbConn}}

	translation, err := initTranslation(locale)
	if err != nil {
		return nil, err
	}

	return &app.App{
		L:  logging.NewLoggerManager(),
		DB: db,{{range .exts}}
		{{.Name}}: {{.Init}},{{end}}
		App: golava.App{
			Name:        os.Getenv("APP_NAME"),
			Debug:       debug,
			AppKey:      appKey,
			Router:      router,
			Encryption:  encrypter,
			Hashing:     hashing.NewHasherManager(),
			Translation: translation,
			AppLocale:   locale,
		},
	}, nil
}
{{if eq .dbTypeName "ent"}}
func getEntDBDriver() string {
	driver := os.Getenv("DB_DRIVER")

	switch driver {
	case "sqlite3":
		return "sqlite"
	}

	return driver
}
{{end}}