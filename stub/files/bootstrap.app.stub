package bootstrap

import (
{{.packages}}
)

func InitApp(ctx context.Context) (*app.App, error) {
	locale := "en"

	debug := env.Bool(os.Getenv("APP_DEBUG"))

	appKey, err := appKey()
	if err != nil {
		return nil, err
	}

	router, err := routing.NewRouter("/")
	if err != nil {
		return nil, err
	}

	encrypter, err := initEncryption()
	if err != nil {
		return nil, err
	}

	{{.dbConn}}

	session, err := initSession(db)
	if err != nil {
		return nil, err
	}

	translation, err := initTranslation(locale)
	if err != nil {
		return nil, err
	}

	hasher := hashing.NewHasherManager()
	cookie := cookie.NewEncryptableCookieManager(initCookie(), encrypter)

	return &app.App{
		DB: db,{{range .exts}}
		{{.Name}}: {{.Init}},{{end}}
		App: golava.App{
			Name:           os.Getenv("APP_NAME"),
			Debug:          debug,
			AppKey:         appKey,
			Router:         router,
			Cookie:         cookie,
			Encryption:     encrypter,
			Hashing:        hasher,
			SessionFactory: session,
			Translation:    translation,
			AppLocale:      locale,
		},
	}, nil
}
{{if eq .dbTypeName "ent"}}
func getEntDBDriver() string {
	driver := os.Getenv("DB_DRIVER")

	switch driver {
	case "sqlite3":
		return "sqlite"
	}

	return driver
}
{{end}}